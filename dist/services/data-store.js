import r from"fs/promises";import s from"path";import D from"os";const l=process.env.DATA_STORE_ROOT||s.join(D.homedir(),".grafana-mcp-analyzer","data-store");async function m(t){try{await r.access(t)}catch{await r.mkdir(t,{recursive:!0})}}function x(){return`request-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}async function F(t,a){const e=s.join(l,t);await m(e);const n=s.join(e,"metadata.json");await r.writeFile(n,JSON.stringify({id:t,...a},null,2))}async function y(t){const a=s.join(l,t,"metadata.json");try{const e=await r.readFile(a,"utf-8");return JSON.parse(e)}catch{throw new Error(`Request metadata not found: ${t}`)}}async function z(t,a,e=500*1024){const n=s.join(l,t),i=s.join(n,"data");await m(i);const h=JSON.stringify(a,null,2),c=Buffer.byteLength(h,"utf8");if(c<=e){const u=s.join(i,"full.json");return await r.writeFile(u,h),{type:"full",size:c,chunks:1,resourceUri:`monitoring-data://${t}/data`}}else{const u=e,o=Math.ceil(c/u);for(let f=0;f<o;f++){const d=f*u,w=Math.min(d+u,c),j=h.slice(d,w),g=s.join(i,`chunk-${f}.json`);await r.writeFile(g,j)}return{type:"chunked",totalChunks:o,size:c,resourceUris:Array.from({length:o},(f,d)=>`monitoring-data://${t}/chunk-${d}`)}}}async function O(t,a){const e=s.join(l,t,"data");if(a){const n=s.join(e,`${a}.json`);try{return await r.readFile(n,"utf-8")}catch{throw new Error(`Data chunk not found: ${t}/${a}`)}}else{const n=s.join(e,"full.json");try{const i=await r.readFile(n,"utf-8");return JSON.parse(i)}catch{try{const c=(await r.readdir(e)).filter(o=>o.startsWith("chunk-")&&o.endsWith(".json")).sort((o,f)=>{const d=parseInt(o.match(/chunk-(\d+)\.json$/)?.[1]||"0"),w=parseInt(f.match(/chunk-(\d+)\.json$/)?.[1]||"0");return d-w});if(c.length===0)throw new Error(`No data found for request: ${t}`);let u="";for(const o of c){const f=s.join(e,o),d=await r.readFile(f,"utf-8");u+=d}return JSON.parse(u)}catch{throw new Error(`Failed to get response data: ${t}`)}}}}async function S(t){const a=s.join(l,t,"data");try{return(await r.readdir(a)).filter(n=>n.endsWith(".json"))}catch{return[]}}async function T(t,a){const e=s.join(l,t);await m(e);const n=s.join(e,"analysis.json");await r.writeFile(n,JSON.stringify(a,null,2))}async function A(t){const a=s.join(l,t,"analysis.json");try{const e=await r.readFile(a,"utf-8");return JSON.parse(e)}catch{throw new Error(`Analysis not found: ${t}`)}}async function R(){try{await m(l);const t=await r.readdir(l),a=[];for(const e of t)if(e.startsWith("request-"))try{const n=await y(e);a.push(n)}catch{}return a.sort((e,n)=>new Date(n.timestamp).getTime()-new Date(e.timestamp).getTime())}catch{return[]}}async function E(t){return(await R()).filter(e=>e.sessionId===t)}async function N(t){const a=s.join(l,t);try{return await r.rm(a,{recursive:!0}),!0}catch{return!1}}async function P(t){const a=s.join(l,t);try{return await r.access(a),!0}catch{return!1}}async function J(t){try{const a=await y(t),e=await S(t);let n=0,i="none",h=[];if(e.length>0){const u=s.join(l,t,"data");if(e.includes("full.json"))i="full",n=(await r.stat(s.join(u,"full.json"))).size,h=[`monitoring-data://${t}/data`];else{const o=e.filter(f=>f.startsWith("chunk-"));if(o.length>0){i="chunked";for(const f of o){const d=await r.stat(s.join(u,f));n+=d.size}h=o.map(f=>{const d=f.match(/chunk-(\d+)\.json$/)?.[1];return`monitoring-data://${t}/chunk-${d}`})}}}const c=await r.access(s.join(l,t,"analysis.json")).then(()=>!0).catch(()=>!1);return{requestId:t,timestamp:a.timestamp,prompt:a.prompt,sessionId:a.sessionId,dataType:i,dataFiles:e.length,totalSize:n,hasAnalysis:c,resourceUris:h}}catch{throw new Error(`Failed to get request stats: ${t}`)}}async function M(t=!1,a=24){try{await m(l);const e=await r.readdir(l);let n=0;const i=Date.now(),h=a*60*60*1e3;for(const c of e)if(c.startsWith("request-")){const u=s.join(l,c);try{if(t)await r.rm(u,{recursive:!0}),n++,console.log(`\u{1F5D1}\uFE0F \u5220\u9664\u8BF7\u6C42\u76EE\u5F55: ${c}`);else{const o=await y(c),f=new Date(o.timestamp).getTime();i-f>h&&(await r.rm(u,{recursive:!0}),n++,console.log(`\u{1F5D1}\uFE0F \u5220\u9664\u8FC7\u671F\u8BF7\u6C42: ${c} (${o.timestamp})`))}}catch(o){console.warn(`\u26A0\uFE0F \u6E05\u7406\u8BF7\u6C42 ${c} \u5931\u8D25:`,o)}}return n}catch(e){return console.error("\u274C \u6570\u636E\u6E05\u7406\u5931\u8D25:",e),0}}async function W(){try{await m(l);const t=await r.readdir(l);let a=0,e=0,n=null,i=null,h=1/0,c=0;for(const u of t)if(u.startsWith("request-")){a++;try{const o=s.join(l,u),f=await p(o);e+=f;const d=await y(u),w=new Date(d.timestamp).getTime();w<h&&(h=w,n=u),w>c&&(c=w,i=u)}catch{}}return{totalRequests:a,totalSize:e,totalSizeMB:(e/(1024*1024)).toFixed(2),oldestRequest:n?{id:n,timestamp:new Date(h).toISOString()}:null,newestRequest:i?{id:i,timestamp:new Date(c).toISOString()}:null,storageRoot:l}}catch(t){return console.error("\u274C \u83B7\u53D6\u6570\u636E\u5B58\u50A8\u7EDF\u8BA1\u5931\u8D25:",t),{totalRequests:0,totalSize:0,totalSizeMB:"0.00",oldestRequest:null,newestRequest:null,storageRoot:l}}}async function p(t){let a=0;try{const e=await r.readdir(t);for(const n of e){const i=s.join(t,n),h=await r.stat(i);h.isDirectory()?a+=await p(i):a+=h.size}}catch{}return a}export{M as cleanupExpiredData,N as deleteRequest,x as generateRequestId,A as getAnalysis,W as getDataStoreStats,y as getRequestMetadata,J as getRequestStats,O as getResponseData,R as listAllRequests,S as listDataFiles,E as listRequestsBySession,P as requestExists,T as storeAnalysis,F as storeRequestMetadata,z as storeResponseData};
