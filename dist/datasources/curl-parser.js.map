{
  "version": 3,
  "sources": ["curl-parser.js"],
  "sourcesContent": ["/**\n * curl\u547D\u4EE4\u89E3\u6790\u5668\n * \u5C06curl\u547D\u4EE4\u8F6C\u6362\u4E3AHttpRequest\u5BF9\u8C61\n */\n/**\n * \u89E3\u6790curl\u547D\u4EE4\u5E76\u8F6C\u6362\u4E3AHttpRequest\u5BF9\u8C61\n *\n * @param curlCommand curl\u547D\u4EE4\u5B57\u7B26\u4E32\n * @returns \u89E3\u6790\u540E\u7684HttpRequest\u5BF9\u8C61\n */\nexport function parseCurlCommand(curlCommand) {\n    // \u79FB\u9664\u5F00\u5934\u7684curl\u547D\u4EE4\u548C\u591A\u4F59\u7A7A\u683C\n    let command = curlCommand.trim();\n    if (command.startsWith('curl ')) {\n        command = command.substring(5);\n    }\n    const request = {\n        url: '',\n        method: 'GET', // \u9ED8\u8BA4\u65B9\u6CD5\n        headers: {},\n        data: undefined,\n        params: {},\n        timeout: undefined\n    };\n    // \u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u89E3\u6790\u5404\u4E2A\u53C2\u6570\n    // \u8FD9\u91CC\u9700\u8981\u5904\u7406\u5F15\u53F7\u548C\u8F6C\u4E49\u5B57\u7B26\n    const tokens = tokenizeCurlCommand(command);\n    let i = 0;\n    while (i < tokens.length) {\n        const token = tokens[i];\n        if (token === '-X' || token === '--request') {\n            // \u8BF7\u6C42\u65B9\u6CD5\n            if (i + 1 < tokens.length) {\n                const method = tokens[i + 1].toUpperCase();\n                if (isValidHttpMethod(method)) {\n                    request.method = method;\n                }\n                i += 2;\n            }\n            else {\n                i++;\n            }\n        }\n        else if (token === '-H' || token === '--header') {\n            // \u8BF7\u6C42\u5934\n            if (i + 1 < tokens.length) {\n                const headerStr = tokens[i + 1];\n                const colonIndex = headerStr.indexOf(':');\n                if (colonIndex > 0) {\n                    const headerName = headerStr.substring(0, colonIndex).trim();\n                    const headerValue = headerStr.substring(colonIndex + 1).trim();\n                    request.headers[headerName] = headerValue;\n                }\n                i += 2;\n            }\n            else {\n                i++;\n            }\n        }\n        else if (token === '-d' || token === '--data' || token === '--data-raw') {\n            // \u8BF7\u6C42\u4F53\u6570\u636E\n            if (i + 1 < tokens.length) {\n                let dataStr = tokens[i + 1];\n                // \u68C0\u67E5\u662F\u5426\u662FNDJSON\u683C\u5F0F\uFF08\u591A\u884CJSON\uFF09\n                if (dataStr.includes('\\n')) {\n                    // \u5BF9\u4E8ENDJSON\u683C\u5F0F\uFF0C\u76F4\u63A5\u4F5C\u4E3A\u5B57\u7B26\u4E32\u53D1\u9001\n                    request.data = dataStr;\n                }\n                else {\n                    // \u5C1D\u8BD5\u89E3\u6790\u4E3AJSON\uFF0C\u5982\u679C\u5931\u8D25\u5219\u4F5C\u4E3A\u5B57\u7B26\u4E32\n                    try {\n                        request.data = JSON.parse(dataStr);\n                    }\n                    catch {\n                        request.data = dataStr;\n                    }\n                }\n                // \u5982\u679C\u6709\u6570\u636E\uFF0C\u9ED8\u8BA4\u65B9\u6CD5\u6539\u4E3APOST\n                if (request.method === 'GET') {\n                    request.method = 'POST';\n                }\n                i += 2;\n            }\n            else {\n                i++;\n            }\n        }\n        else if (token === '--connect-timeout' || token === '--max-time') {\n            // \u8D85\u65F6\u8BBE\u7F6E\n            if (i + 1 < tokens.length) {\n                const timeoutStr = tokens[i + 1];\n                const timeout = parseInt(timeoutStr, 10);\n                if (!isNaN(timeout)) {\n                    request.timeout = timeout * 1000; // \u8F6C\u6362\u4E3A\u6BEB\u79D2\n                }\n                i += 2;\n            }\n            else {\n                i++;\n            }\n        }\n        else if (token === '-u' || token === '--user') {\n            // \u7528\u6237\u8BA4\u8BC1\n            if (i + 1 < tokens.length) {\n                const userStr = tokens[i + 1];\n                const encodedAuth = Buffer.from(userStr).toString('base64');\n                request.headers['Authorization'] = `Basic ${encodedAuth}`;\n                i += 2;\n            }\n            else {\n                i++;\n            }\n        }\n        else if (token === '-A' || token === '--user-agent') {\n            // User-Agent\n            if (i + 1 < tokens.length) {\n                request.headers['User-Agent'] = tokens[i + 1];\n                i += 2;\n            }\n            else {\n                i++;\n            }\n        }\n        else if (token === '-e' || token === '--referer') {\n            // Referer\n            if (i + 1 < tokens.length) {\n                request.headers['Referer'] = tokens[i + 1];\n                i += 2;\n            }\n            else {\n                i++;\n            }\n        }\n        else if (token === '-b' || token === '--cookie') {\n            // Cookie\n            if (i + 1 < tokens.length) {\n                request.headers['Cookie'] = tokens[i + 1];\n                i += 2;\n            }\n            else {\n                i++;\n            }\n        }\n        else if (token.startsWith('-')) {\n            // \u8DF3\u8FC7\u5176\u4ED6\u4E0D\u652F\u6301\u7684\u9009\u9879\n            i++;\n        }\n        else if (!request.url) {\n            // \u7B2C\u4E00\u4E2A\u4E0D\u4EE5-\u5F00\u5934\u7684\u53C2\u6570\u4F5C\u4E3AURL\n            request.url = token;\n            i++;\n        }\n        else {\n            // \u8DF3\u8FC7\u5176\u4ED6\u53C2\u6570\n            i++;\n        }\n    }\n    // \u5982\u679C\u6CA1\u6709\u8BBE\u7F6EContent-Type\u4F46\u6709\u6570\u636E\uFF0C\u5219\u8BBE\u7F6E\u9ED8\u8BA4\u503C\n    if (request.data && !request.headers['Content-Type'] && !request.headers['content-type']) {\n        if (typeof request.data === 'object') {\n            request.headers['Content-Type'] = 'application/json';\n        }\n        else {\n            request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        }\n    }\n    return request;\n}\n/**\n * \u5C06curl\u547D\u4EE4\u5B57\u7B26\u4E32\u5206\u89E3\u4E3A\u6807\u8BB0\u6570\u7EC4\n * \u6B63\u786E\u5904\u7406\u5F15\u53F7\u548C\u8F6C\u4E49\u5B57\u7B26\n */\nfunction tokenizeCurlCommand(command) {\n    const tokens = [];\n    let current = '';\n    let inQuotes = false;\n    let quoteChar = '';\n    let escaped = false;\n    let dollarQuote = false; // \u5904\u7406$'...'\u683C\u5F0F\n    for (let i = 0; i < command.length; i++) {\n        const char = command[i];\n        if (escaped) {\n            current += char;\n            escaped = false;\n            continue;\n        }\n        if (char === '\\\\' && inQuotes && !dollarQuote) {\n            escaped = true;\n            continue;\n        }\n        if (inQuotes) {\n            if (char === quoteChar && !dollarQuote) {\n                inQuotes = false;\n                quoteChar = '';\n            }\n            else if (char === \"'\" && dollarQuote) {\n                inQuotes = false;\n                quoteChar = '';\n                dollarQuote = false;\n            }\n            else {\n                // \u5728$'...'\u683C\u5F0F\u4E2D\u5904\u7406\u8F6C\u4E49\u5B57\u7B26\n                if (dollarQuote && char === '\\\\' && i + 1 < command.length) {\n                    const nextChar = command[i + 1];\n                    if (nextChar === 'n') {\n                        current += '\\n';\n                        i++; // \u8DF3\u8FC7\u4E0B\u4E00\u4E2A\u5B57\u7B26\n                    }\n                    else if (nextChar === 't') {\n                        current += '\\t';\n                        i++;\n                    }\n                    else if (nextChar === 'r') {\n                        current += '\\r';\n                        i++;\n                    }\n                    else if (nextChar === '\\\\') {\n                        current += '\\\\';\n                        i++;\n                    }\n                    else if (nextChar === \"'\") {\n                        current += \"'\";\n                        i++;\n                    }\n                    else if (nextChar === '\"') {\n                        current += '\\\\\"'; // \u4FDD\u7559\u8F6C\u4E49\u7684\u53CC\u5F15\u53F7\n                        i++;\n                    }\n                    else {\n                        current += char;\n                    }\n                }\n                else {\n                    current += char;\n                }\n            }\n        }\n        else {\n            // \u68C0\u67E5$'...'\u683C\u5F0F\n            if (char === '$' && i + 1 < command.length && command[i + 1] === \"'\") {\n                dollarQuote = true;\n                inQuotes = true;\n                quoteChar = \"'\";\n                i++; // \u8DF3\u8FC7\u4E0B\u4E00\u4E2A'\u5B57\u7B26\n            }\n            else if (char === '\"' || char === \"'\") {\n                inQuotes = true;\n                quoteChar = char;\n            }\n            else if (char === ' ' || char === '\\t' || char === '\\n') {\n                if (current.length > 0) {\n                    tokens.push(current);\n                    current = '';\n                }\n            }\n            else {\n                current += char;\n            }\n        }\n    }\n    if (current.length > 0) {\n        tokens.push(current);\n    }\n    return tokens;\n}\n/**\n * \u9A8C\u8BC1HTTP\u65B9\u6CD5\u662F\u5426\u6709\u6548\n */\nfunction isValidHttpMethod(method) {\n    return ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'HEAD', 'OPTIONS'].includes(method);\n}\n/**\n * \u5C06HttpRequest\u5BF9\u8C61\u8F6C\u6362\u4E3Acurl\u547D\u4EE4\uFF08\u7528\u4E8E\u8C03\u8BD5\u548C\u65E5\u5FD7\uFF09\n *\n * @param request HttpRequest\u5BF9\u8C61\n * @param baseUrl \u57FA\u7840URL\uFF08\u53EF\u9009\uFF09\n * @returns curl\u547D\u4EE4\u5B57\u7B26\u4E32\n */\nexport function httpRequestToCurl(request, baseUrl) {\n    let curlCommand = 'curl';\n    // URL\n    let url = request.url;\n    if (baseUrl && !url.startsWith('http')) {\n        const cleanBaseUrl = baseUrl.replace(/\\/$/, '');\n        const cleanUrl = url.replace(/^\\//, '');\n        url = `${cleanBaseUrl}/${cleanUrl}`;\n    }\n    curlCommand += ` '${url}'`;\n    // \u65B9\u6CD5\n    if (request.method && request.method !== 'GET') {\n        curlCommand += ` -X ${request.method}`;\n    }\n    // \u8BF7\u6C42\u5934\n    if (request.headers) {\n        for (const [key, value] of Object.entries(request.headers)) {\n            curlCommand += ` -H '${key}: ${value}'`;\n        }\n    }\n    // \u8BF7\u6C42\u4F53\u6570\u636E\n    if (request.data) {\n        const dataStr = typeof request.data === 'string'\n            ? request.data\n            : JSON.stringify(request.data);\n        curlCommand += ` -d '${dataStr}'`;\n    }\n    // \u8D85\u65F6\n    if (request.timeout) {\n        const timeoutSeconds = Math.ceil(request.timeout / 1000);\n        curlCommand += ` --connect-timeout ${timeoutSeconds}`;\n    }\n    return curlCommand;\n}\n"],
  "mappings": "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",
  "names": ["parseCurlCommand", "curlCommand", "command", "request", "tokens", "tokenizeCurlCommand", "i", "token", "method", "isValidHttpMethod", "headerStr", "colonIndex", "headerName", "headerValue", "dataStr", "timeoutStr", "timeout", "userStr", "encodedAuth", "current", "inQuotes", "quoteChar", "escaped", "dollarQuote", "char", "nextChar", "httpRequestToCurl", "baseUrl", "url", "cleanBaseUrl", "cleanUrl", "key", "value", "timeoutSeconds"]
}
