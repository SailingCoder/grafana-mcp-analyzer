{
  "version": 3,
  "sources": ["mcp-server.js"],
  "sourcesContent": ["#!/usr/bin/env node\nimport { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';\nimport { z } from 'zod';\nimport fs from 'fs';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\nimport { executeQuery, extractData, checkHealth } from '../datasources/grafana-client.js';\nimport { buildAnalysisGuidance, generateDataOverview } from '../services/monitoring-analyzer.js';\nimport { generateRequestId, storeRequestMetadata, storeResponseData, getResponseData, storeAnalysis, getAnalysis, listAllRequests, listRequestsBySession, getRequestStats, cleanupExpiredData } from '../services/data-store.js';\nimport { createSession, getSessionInfo, listSessions, deleteSession } from '../services/session-manager.js';\nimport { loadConfig } from '../services/config-manager.js';\n// \u8BFB\u53D6\u7248\u672C\u53F7\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\nconst packageJsonPath = path.resolve(__dirname, '../../package.json');\nconst packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf-8'));\nconst SERVER_INFO = {\n    name: 'grafana-mcp-analyzer',\n    version: packageJson.version,\n    description: `Grafana MCP\u5206\u6790\u5668 - \u76D1\u63A7\u6570\u636E\u67E5\u8BE2\u548C\u5206\u6790\u5DE5\u5177\n\n\uD83C\uDFAF \u6838\u5FC3\u529F\u80FD\uFF1A\u9884\u5B9A\u4E49\u67E5\u8BE2\u3001\u6570\u636E\u5B58\u50A8\u3001AI\u5206\u6790\u6307\u5F15\u3001\u4F1A\u8BDD\u7BA1\u7406\n\uD83D\uDCCA \u6570\u636E\u5904\u7406\uFF1A\u652F\u6301\u4EFB\u610F\u5927\u5C0F\u6570\u636E\uFF0C\u63D0\u4F9B\u5B8C\u6574\u6570\u636E\u5206\u6790 \n\uD83D\uDD27 \u4F7F\u7528\u65B9\u5F0F\uFF1Alist_queries\u67E5\u770B\u53EF\u7528\u67E5\u8BE2\uFF0Canalyze_query\u8FDB\u884C\u5206\u6790`\n};\n// \u5168\u5C40\u914D\u7F6E\nlet config = {};\n// \u5DE5\u5177\u51FD\u6570\nfunction createResponse(data, isError = false) {\n    return {\n        content: [{ type: 'text', text: JSON.stringify(data, null, 2) }],\n        ...(isError && { isError: true })\n    };\n}\nfunction createErrorResponse(error) {\n    const errorMessage = error instanceof Error ? error.message : error;\n    return createResponse({\n        success: false,\n        error: errorMessage,\n        timestamp: new Date().toISOString()\n    }, true);\n}\n// \u9A8C\u8BC1\u67E5\u8BE2\u914D\u7F6E\u662F\u5426\u5B58\u5728\nfunction validateQueryConfig(queryName) {\n    const queries = getQueries();\n    if (!queries[queryName]) {\n        throw new Error(`\u67E5\u8BE2\u914D\u7F6E\u4E0D\u5B58\u5728: ${queryName}`);\n    }\n    return queries[queryName];\n}\n// \u6784\u5EFAResourceLinks\nfunction buildResourceLinks(storageResult, requestId) {\n    return storageResult.type === 'chunked'\n        ? storageResult.resourceUris || []\n        : [storageResult.resourceUri || `monitoring-data://${requestId}/data`];\n}\n// \u6267\u884C\u67E5\u8BE2\u5E76\u5B58\u50A8\u6570\u636E\u7684\u901A\u7528\u6D41\u7A0B\nasync function executeAndStoreQuery(queryConfig, requestId, metadata) {\n    // \u5B58\u50A8\u8BF7\u6C42\u5143\u6570\u636E\n    await storeRequestMetadata(requestId, {\n        timestamp: new Date().toISOString(),\n        url: queryConfig.url,\n        method: queryConfig.method || 'POST',\n        params: queryConfig.params,\n        data: queryConfig.data,\n        ...metadata\n    });\n    // \u6267\u884C\u67E5\u8BE2\n    const result = await executeGrafanaQuery(queryConfig);\n    // \u5B58\u50A8\u54CD\u5E94\u6570\u636E\n    const storageResult = await storeResponseData(requestId, result);\n    // \u6784\u5EFAResourceLinks\n    const resourceLinks = buildResourceLinks(storageResult, requestId);\n    return { result, storageResult, resourceLinks };\n}\n// \u6267\u884C\u67E5\u8BE2\nasync function executeGrafanaQuery(request) {\n    // \u5982\u679C\u67E5\u8BE2\u914D\u7F6E\u5305\u542Bcurl\u5C5E\u6027\uFF0C\u76F4\u63A5\u4F20\u9012\u7ED9executeQuery\u51FD\u6570\u5904\u7406\n    const queryResponse = await executeQuery(request, config.baseUrl || '');\n    if (!queryResponse.success) {\n        throw new Error(`\u67E5\u8BE2\u6267\u884C\u5931\u8D25: ${queryResponse.error}`);\n    }\n    return extractData(queryResponse);\n}\n// MCP\u670D\u52A1\u5668\nconst server = new McpServer(SERVER_INFO);\n// \u83B7\u53D6\u914D\u7F6E\u4E2D\u7684\u67E5\u8BE2\nfunction getQueries() {\n    return config.queries || {};\n}\n// \u901A\u7528Resource\u5904\u7406\u5668\nfunction createResourceHandler(dataGetter) {\n    return async (uri) => {\n        try {\n            const parts = uri.href.split('/');\n            const data = await dataGetter(parts);\n            return {\n                contents: [{\n                        uri: uri.href,\n                        text: typeof data === 'string' ? data : JSON.stringify(data, null, 2),\n                        mimeType: \"application/json\"\n                    }]\n            };\n        }\n        catch (error) {\n            return {\n                contents: [{\n                        uri: uri.href,\n                        text: `Error: ${error instanceof Error ? error.message : String(error)}`,\n                        mimeType: \"text/plain\"\n                    }]\n            };\n        }\n    };\n}\n// \u6CE8\u518C\u76D1\u63A7\u6570\u636E\u8D44\u6E90\nserver.resource(\"monitoring-data\", \"monitoring-data://{requestId}/{dataType}\", {\n    title: \"\u76D1\u63A7\u6570\u636E\",\n    description: \"Grafana\u76D1\u63A7\u6570\u636E\u8D44\u6E90\u67E5\u770B\u5668\"\n}, createResourceHandler(async (parts) => {\n    const requestId = parts[2];\n    const dataType = parts[3];\n    if (dataType === 'analysis') {\n        return await getAnalysis(requestId);\n    }\n    else if (dataType?.startsWith('chunk-')) {\n        return await getResponseData(requestId, dataType);\n    }\n    else {\n        return await getResponseData(requestId);\n    }\n}));\n// \u8BF7\u6C42\u5217\u8868\u8D44\u6E90\nserver.resource(\"monitoring-data-index\", \"monitoring-data-index://requests\", {\n    title: \"\u6240\u6709\u8BF7\u6C42\",\n    description: \"\u67E5\u770B\u6240\u6709\u53EF\u7528\u7684\u76D1\u63A7\u8BF7\u6C42\"\n}, createResourceHandler(async () => await listAllRequests()));\n// \u4F1A\u8BDD\u8BF7\u6C42\u5217\u8868\u8D44\u6E90\nserver.resource(\"monitoring-data-index\", \"monitoring-data-index://session/{sessionId}\", {\n    title: \"\u4F1A\u8BDD\u8BF7\u6C42\",\n    description: \"\u67E5\u770B\u6307\u5B9A\u4F1A\u8BDD\u4E2D\u7684\u6240\u6709\u8BF7\u6C42\"\n}, createResourceHandler(async (parts) => {\n    const sessionId = parts.pop() || '';\n    return await listRequestsBySession(sessionId);\n}));\n// \u5065\u5EB7\u68C0\u67E5\u5DE5\u5177\nserver.tool('check_health', {\n    timeout: z.number().optional().describe('\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09'),\n    expectedStatus: z.number().optional().describe('\u671F\u671B\u7684HTTP\u72B6\u6001\u7801')\n}, async ({ timeout, expectedStatus }) => {\n    try {\n        let healthStatus = {\n            status: 'healthy',\n            timestamp: new Date().toISOString()\n        };\n        if (config.baseUrl && config.healthCheck) {\n            const healthUrl = `${config.baseUrl}/${config.healthCheck.url}`;\n            healthStatus = await checkHealth(healthUrl, { timeout, expectedStatus });\n        }\n        return createResponse(healthStatus);\n    }\n    catch (error) {\n        return createErrorResponse(error);\n    }\n});\n// \u67E5\u8BE2\u5217\u8868\u5DE5\u5177\nserver.tool('list_queries', {\n    includeConfig: z.boolean().optional().describe('\u662F\u5426\u5305\u542B\u5B8C\u6574\u914D\u7F6E\u4FE1\u606F').default(false)\n}, async ({ includeConfig }) => {\n    const queries = config.queries ? Object.keys(config.queries) : [];\n    return createResponse({\n        queries,\n        count: queries.length,\n        ...(includeConfig && { config: config.queries || {} })\n    });\n});\n// \u5206\u6790\u5355\u4E2A\u67E5\u8BE2\u5DE5\u5177\nserver.tool('analyze_query', {\n    queryName: z.string().describe('\u67E5\u8BE2\u540D\u79F0\uFF08\u4ECE\u914D\u7F6E\u6587\u4EF6\u83B7\u53D6\uFF09'),\n    prompt: z.string().describe('\u5206\u6790\u9700\u6C42\u63CF\u8FF0'),\n    sessionId: z.string().optional().describe('\u4F1A\u8BDDID\uFF08\u53EF\u9009\uFF09')\n}, async ({ queryName, prompt, sessionId }) => {\n    try {\n        const queryConfig = validateQueryConfig(queryName);\n        const requestId = generateRequestId();\n        const { result, storageResult, resourceLinks } = await executeAndStoreQuery(queryConfig, requestId, { prompt, sessionId });\n        // \u751F\u6210\u6570\u636E\u6982\u89C8\u548C\u5206\u6790\u6307\u5F15\n        const dataOverview = generateDataOverview(result);\n        const analysisGuidance = buildAnalysisGuidance(prompt, requestId, dataOverview, resourceLinks, queryConfig);\n        // \u5B58\u50A8\u5206\u6790\u6307\u5F15\n        await storeAnalysis(requestId, {\n            prompt,\n            timestamp: new Date().toISOString(),\n            result: analysisGuidance,\n            queryName,\n            dataOverview,\n            resourceLinks\n        });\n        return createResponse({\n            success: true,\n            requestId,\n            queryName,\n            dataSize: storageResult.size,\n            storageType: storageResult.type,\n            resourceLinks,\n            analysisGuidance,\n            message: `## \u67E5\u8BE2\u5206\u6790\u5B8C\u6210\\n\\n**\u67E5\u8BE2:** ${queryName}\\n**\u8BF7\u6C42ID:** ${requestId}\\n**\u6570\u636E\u5927\u5C0F:** ${(storageResult.size / 1024).toFixed(2)} KB\\n**\u5B58\u50A8\u7C7B\u578B:** ${storageResult.type}\\n\\n${analysisGuidance}`\n        });\n    }\n    catch (error) {\n        return createErrorResponse(error);\n    }\n});\n// \u4EC5\u67E5\u8BE2\u6570\u636E\u5DE5\u5177\nserver.tool('query_data', {\n    queryName: z.string().describe('\u67E5\u8BE2\u540D\u79F0\uFF08\u4ECE\u914D\u7F6E\u6587\u4EF6\u83B7\u53D6\uFF09'),\n    description: z.string().optional().describe('\u67E5\u8BE2\u63CF\u8FF0'),\n    sessionId: z.string().optional().describe('\u4F1A\u8BDDID\uFF08\u53EF\u9009\uFF09')\n}, async ({ queryName, description, sessionId }) => {\n    try {\n        const queryConfig = validateQueryConfig(queryName);\n        const requestId = generateRequestId();\n        const prompt = description || `\u67E5\u8BE2 ${queryName} \u6570\u636E`;\n        const { storageResult } = await executeAndStoreQuery(queryConfig, requestId, { prompt, sessionId });\n        const responseText = `## \u67E5\u8BE2\u5B8C\u6210\\n\\n**\u67E5\u8BE2:** ${queryName}\\n**\u8BF7\u6C42ID:** ${requestId}\\n**\u6570\u636E\u5927\u5C0F:** ${(storageResult.size / 1024).toFixed(2)} KB\\n**\u5B58\u50A8\u7C7B\u578B:** ${storageResult.type}\\n**\u65F6\u95F4\u6233:** ${new Date().toISOString()}\\n\\n\u6570\u636E\u5DF2\u5B58\u50A8\uFF0C\u53EF\u7528\u4E8E\u540E\u7EED\u5206\u6790\u3002`;\n        return createResponse({\n            requestId,\n            queryName,\n            dataSize: storageResult.size,\n            storageType: storageResult.type,\n            message: responseText,\n            hasData: storageResult.size > 0\n        });\n    }\n    catch (error) {\n        return createErrorResponse(error);\n    }\n});\n// \u805A\u5408\u5206\u6790\u5DE5\u5177\nserver.tool('aggregate_analyze', {\n    queryNames: z.array(z.string()).describe('\u67E5\u8BE2\u540D\u79F0\u5217\u8868\uFF08\u4ECE\u914D\u7F6E\u6587\u4EF6\u83B7\u53D6\uFF09'),\n    prompt: z.string().describe('\u805A\u5408\u5206\u6790\u9700\u6C42\u63CF\u8FF0'),\n    sessionId: z.string().optional().describe('\u4F1A\u8BDDID\uFF08\u53EF\u9009\uFF09')\n}, async ({ queryNames, prompt, sessionId }) => {\n    try {\n        const queries = getQueries();\n        const allResults = [];\n        const requestIds = [];\n        let totalSize = 0;\n        // \u9010\u4E2A\u6267\u884C\u67E5\u8BE2\n        for (const queryName of queryNames) {\n            if (!queries[queryName]) {\n                return createErrorResponse(`\u67E5\u8BE2\u914D\u7F6E\u4E0D\u5B58\u5728: ${queryName}`);\n            }\n            const queryConfig = queries[queryName];\n            const requestId = generateRequestId();\n            requestIds.push(requestId);\n            // \u5B58\u50A8\u8BF7\u6C42\u5143\u6570\u636E\n            await storeRequestMetadata(requestId, {\n                timestamp: new Date().toISOString(),\n                url: queryConfig.url,\n                method: queryConfig.method || 'POST',\n                params: queryConfig.params,\n                data: queryConfig.data,\n                prompt: `\u805A\u5408\u5206\u6790\u7684\u4E00\u90E8\u5206: ${queryName}`,\n                sessionId\n            });\n            // \u6267\u884C\u67E5\u8BE2\n            const result = await executeGrafanaQuery(queryConfig);\n            // \u5B58\u50A8\u54CD\u5E94\u6570\u636E\n            const storageResult = await storeResponseData(requestId, result);\n            totalSize += storageResult.size;\n            allResults.push({\n                queryName,\n                requestId,\n                data: result,\n                size: storageResult.size,\n                storageType: storageResult.type,\n                resourceUris: storageResult.resourceUris,\n                resourceUri: storageResult.resourceUri\n            });\n        }\n        // \u6784\u5EFA\u805A\u5408\u5206\u6790\u7684\u6570\u636E\u6982\u89C8\n        const aggregateOverview = {\n            type: 'aggregate-analysis',\n            hasData: true,\n            status: 'ok',\n            timestamp: new Date().toISOString(),\n            queryNames,\n            totalSize,\n            requestIds,\n            stats: {\n                queryCount: queryNames.length,\n                totalDataSize: totalSize,\n                averageDataSize: totalSize / queryNames.length\n            }\n        };\n        // \u6784\u5EFA\u6240\u6709ResourceLinks\n        const allResourceLinks = allResults.flatMap(result => {\n            return result.storageType === 'chunked'\n                ? result.resourceUris || []\n                : [result.resourceUri || `monitoring-data://${result.requestId}/data`];\n        });\n        // \u6784\u5EFA\u805A\u5408\u5206\u6790\u6307\u5F15\n        const aggregateGuidance = buildAnalysisGuidance(`\u805A\u5408\u5206\u6790\u9700\u6C42: ${prompt}`, requestIds[0], // \u4E3B\u8981\u8BF7\u6C42ID\n        aggregateOverview, allResourceLinks, { systemPrompt: `\u60A8\u662F\u4E00\u4E2A\u4E13\u4E1A\u7684\u805A\u5408\u6570\u636E\u5206\u6790\u4E13\u5BB6\u3002\u8BF7\u5BF9\u591A\u4E2A\u67E5\u8BE2\u7684\u805A\u5408\u6570\u636E\u8FDB\u884C\u7EFC\u5408\u5206\u6790\uFF1A\n1. \u8DE8\u67E5\u8BE2\u7684\u5173\u8054\u6027\u5206\u6790\u548C\u6574\u4F53\u8D8B\u52BF\u8BC6\u522B\n2. \u591A\u7EF4\u5EA6\u6570\u636E\u5BF9\u6BD4\u548C\u5F02\u5E38\u6A21\u5F0F\u68C0\u6D4B\n3. \u7CFB\u7EDF\u6027\u80FD\u74F6\u9888\u548C\u8D44\u6E90\u5229\u7528\u7387\u5206\u6790\n4. \u4E1A\u52A1\u5F71\u54CD\u7684\u5168\u5C40\u8BC4\u4F30\u548C\u98CE\u9669\u9884\u8B66\n5. \u7EFC\u5408\u4F18\u5316\u5EFA\u8BAE\u548C\u7CFB\u7EDF\u6539\u8FDB\u65B9\u6848\n\n\u8BF7\u63D0\u4F9B\u5168\u9762\u7684\u805A\u5408\u5206\u6790\u62A5\u544A\uFF0C\u5305\u542B\u8DE8\u67E5\u8BE2\u7684\u5173\u8054\u5206\u6790\u548C\u6574\u4F53\u4F18\u5316\u5EFA\u8BAE\u3002` });\n        // \u5B58\u50A8\u805A\u5408\u5206\u6790\u6307\u5F15\u5230\u7B2C\u4E00\u4E2A\u8BF7\u6C42\n        await storeAnalysis(requestIds[0], {\n            prompt,\n            timestamp: new Date().toISOString(),\n            result: aggregateGuidance,\n            type: 'aggregate',\n            queryNames,\n            requestIds,\n            dataOverview: aggregateOverview,\n            resourceLinks: allResourceLinks\n        });\n        return createResponse({\n            success: true,\n            requestIds,\n            queryNames,\n            totalSize,\n            resourceLinks: allResourceLinks,\n            aggregateGuidance,\n            message: `## \u805A\u5408\u5206\u6790\u5B8C\u6210\\n\\n**\u67E5\u8BE2:** ${queryNames.join(', ')}\\n**\u5206\u6790\u9700\u6C42:** ${prompt}\\n**\u6570\u636E\u603B\u5927\u5C0F:** ${(totalSize / 1024).toFixed(2)} KB\\n**\u8BF7\u6C42\u6570\u91CF:** ${requestIds.length}\\n\\n${aggregateGuidance}`\n        });\n    }\n    catch (error) {\n        return createErrorResponse(error);\n    }\n});\n// \u6279\u91CF\u5206\u6790\u5DE5\u5177\nserver.tool('batch_analyze', {\n    queryNames: z.array(z.string()).describe('\u67E5\u8BE2\u540D\u79F0\u5217\u8868\uFF08\u4ECE\u914D\u7F6E\u6587\u4EF6\u83B7\u53D6\uFF09'),\n    prompt: z.string().describe('\u6279\u91CF\u5206\u6790\u9700\u6C42\u63CF\u8FF0'),\n    sessionId: z.string().optional().describe('\u4F1A\u8BDDID\uFF08\u53EF\u9009\uFF09')\n}, async ({ queryNames, prompt, sessionId }) => {\n    try {\n        const queries = getQueries();\n        const allResults = [];\n        // \u9010\u4E2A\u6267\u884C\u67E5\u8BE2\u548C\u5206\u6790\n        for (const queryName of queryNames) {\n            if (!queries[queryName]) {\n                return createErrorResponse(`\u67E5\u8BE2\u914D\u7F6E\u4E0D\u5B58\u5728: ${queryName}`);\n            }\n            const queryConfig = queries[queryName];\n            const requestId = generateRequestId();\n            // \u5B58\u50A8\u8BF7\u6C42\u5143\u6570\u636E\n            await storeRequestMetadata(requestId, {\n                timestamp: new Date().toISOString(),\n                url: queryConfig.url,\n                method: queryConfig.method || 'POST',\n                params: queryConfig.params,\n                data: queryConfig.data,\n                prompt: `\u6279\u91CF\u5206\u6790: ${queryName} - ${prompt}`,\n                sessionId\n            });\n            // \u6267\u884C\u67E5\u8BE2\n            const result = await executeGrafanaQuery(queryConfig);\n            // \u5B58\u50A8\u54CD\u5E94\u6570\u636E\n            const storageResult = await storeResponseData(requestId, result);\n            // \u4E3A\u6BCF\u4E2A\u67E5\u8BE2\u751F\u6210\u5206\u6790\u6307\u5F15\n            const dataOverview = generateDataOverview(result);\n            const resourceLinks = storageResult.type === 'chunked'\n                ? storageResult.resourceUris || []\n                : [storageResult.resourceUri || `monitoring-data://${requestId}/data`];\n            const analysisGuidance = buildAnalysisGuidance(`${prompt} - \u9488\u5BF9 ${queryName}`, requestId, dataOverview, resourceLinks, queryConfig);\n            // \u5B58\u50A8\u5206\u6790\u6307\u5F15\n            await storeAnalysis(requestId, {\n                prompt: `${prompt} - \u9488\u5BF9 ${queryName}`,\n                timestamp: new Date().toISOString(),\n                result: analysisGuidance,\n                queryName,\n                dataOverview,\n                resourceLinks\n            });\n            allResults.push({\n                queryName,\n                requestId,\n                dataSize: storageResult.size,\n                storageType: storageResult.type,\n                analysisGuidance,\n                resourceLinks\n            });\n        }\n        // \u6784\u5EFA\u6279\u91CF\u5206\u6790\u54CD\u5E94\n        const summary = `## \u6279\u91CF\u5206\u6790\u5B8C\u6210\\n\\n**\u67E5\u8BE2\u6570\u91CF:** ${queryNames.length}\\n**\u5206\u6790\u9700\u6C42:** ${prompt}\\n\\n`;\n        const details = allResults.map(result => {\n            const resultText = `### ${result.queryName}\\n**\u6570\u636E\u5927\u5C0F:** ${(result.dataSize / 1024).toFixed(2)} KB\\n**\u5B58\u50A8\u7C7B\u578B:** ${result.storageType}\\n**\u5206\u6790\u6307\u5F15:**\\n${result.analysisGuidance}`;\n            return resultText;\n        }).join('\\n\\n');\n        return createResponse({\n            success: true,\n            results: allResults,\n            message: summary + details\n        });\n    }\n    catch (error) {\n        return createErrorResponse(error);\n    }\n});\n// \u7B80\u5316\u7684\u4F1A\u8BDD\u7BA1\u7406\u5DE5\u5177\nserver.tool('manage_sessions', {\n    action: z.enum(['list', 'create', 'get', 'delete']).describe('\u64CD\u4F5C\u7C7B\u578B'),\n    sessionId: z.string().optional().describe('\u4F1A\u8BDDID'),\n    metadata: z.record(z.any()).optional().describe('\u4F1A\u8BDD\u5143\u6570\u636E')\n}, async ({ action, sessionId, metadata }) => {\n    try {\n        switch (action) {\n            case 'list':\n                const sessions = await listSessions();\n                return createResponse(sessions);\n            case 'create':\n                const newSessionId = await createSession(metadata || {});\n                return createResponse({\n                    success: true,\n                    sessionId: newSessionId,\n                    message: '\u4F1A\u8BDD\u521B\u5EFA\u6210\u529F'\n                });\n            case 'get':\n                if (!sessionId) {\n                    return createErrorResponse('\u7F3A\u5C11\u4F1A\u8BDDID');\n                }\n                const sessionInfo = await getSessionInfo(sessionId);\n                return createResponse(sessionInfo);\n            case 'delete':\n                if (!sessionId) {\n                    return createErrorResponse('\u7F3A\u5C11\u4F1A\u8BDDID');\n                }\n                const result = await deleteSession(sessionId);\n                return createResponse({\n                    success: result,\n                    message: result ? '\u4F1A\u8BDD\u5220\u9664\u6210\u529F' : '\u4F1A\u8BDD\u5220\u9664\u5931\u8D25'\n                });\n            default:\n                return createErrorResponse('\u4E0D\u652F\u6301\u7684\u64CD\u4F5C');\n        }\n    }\n    catch (error) {\n        return createErrorResponse(error);\n    }\n});\n// \u5217\u51FA\u6570\u636E\u5DE5\u5177\nserver.tool('list_data', {\n    sessionId: z.string().optional().describe('\u4F1A\u8BDDID\uFF0C\u4E0D\u63D0\u4F9B\u5219\u5217\u51FA\u6240\u6709\u6570\u636E'),\n    limit: z.number().optional().default(10).describe('\u8FD4\u56DE\u6570\u91CF\u9650\u5236')\n}, async ({ sessionId, limit }) => {\n    try {\n        let requests;\n        if (sessionId) {\n            requests = await listRequestsBySession(sessionId);\n        }\n        else {\n            requests = await listAllRequests();\n        }\n        // \u9650\u5236\u8FD4\u56DE\u6570\u91CF\n        const limitedRequests = requests.slice(0, limit);\n        // \u83B7\u53D6\u6BCF\u4E2A\u8BF7\u6C42\u7684\u7EDF\u8BA1\u4FE1\u606F\n        const requestsWithStats = await Promise.all(limitedRequests.map(async (req) => {\n            try {\n                const stats = await getRequestStats(req.id);\n                return stats;\n            }\n            catch (error) {\n                return {\n                    requestId: req.id,\n                    timestamp: req.timestamp,\n                    prompt: req.prompt,\n                    sessionId: req.sessionId,\n                    error: 'Failed to get stats'\n                };\n            }\n        }));\n        return createResponse({\n            data: requestsWithStats,\n            total: requests.length,\n            returned: limitedRequests.length,\n            sessionId: sessionId || 'all'\n        });\n    }\n    catch (error) {\n        return createErrorResponse(error);\n    }\n});\n// \u670D\u52A1\u5668\u72B6\u6001\u5DE5\u5177\nserver.tool('server_status', {}, async () => {\n    return createResponse({\n        server: SERVER_INFO,\n        config: {\n            hasBaseUrl: !!config.baseUrl,\n            hasHealthCheck: !!config.healthCheck,\n            queryCount: Object.keys(config.queries || {}).length\n        },\n        timestamp: new Date().toISOString()\n    });\n});\n// \u542F\u52A8\u670D\u52A1\u5668\nasync function main() {\n    try {\n        config = await loadConfig(process.env.CONFIG_PATH);\n        // \u8BB0\u5F55\u6570\u636E\u8FC7\u671F\u65F6\u95F4\u914D\u7F6E\n        const dataExpiryHours = parseInt(process.env.DATA_EXPIRY_HOURS || '24', 10);\n        // \u542F\u52A8\u65F6\u7ACB\u5373\u6267\u884C\u4E00\u6B21\u6E05\u7406\n        try {\n            const initialCleanup = await cleanupExpiredData(false, dataExpiryHours);\n            if (initialCleanup > 0) {\n                console.error(`\uD83D\uDDD1\uFE0F \u670D\u52A1\u542F\u52A8\u6E05\u7406\u5B8C\u6210\uFF0C\u5220\u9664\u4E86 ${initialCleanup} \u4E2A\u8FC7\u671F\u8BF7\u6C42`);\n            }\n        }\n        catch (error) {\n            console.error('\u274C \u542F\u52A8\u65F6\u6570\u636E\u6E05\u7406\u5931\u8D25:', error);\n        }\n        // \u8BBE\u7F6E\u5B9A\u65F6\u6E05\u7406\u4EFB\u52A1\uFF0C\u6BCF\u5C0F\u65F6\u6267\u884C\u4E00\u6B21\n        setInterval(async () => {\n            try {\n                const deletedCount = await cleanupExpiredData(false, dataExpiryHours);\n                if (deletedCount > 0) {\n                    console.error(`\uD83D\uDDD1\uFE0F \u5B9A\u65F6\u6E05\u7406\u5B8C\u6210\uFF0C\u5220\u9664\u4E86 ${deletedCount} \u4E2A\u8FC7\u671F\u8BF7\u6C42`);\n                }\n            }\n            catch (error) {\n                console.error('\u274C \u5B9A\u65F6\u6570\u636E\u6E05\u7406\u5931\u8D25:', error);\n            }\n        }, 60 * 60 * 1000); // 1\u5C0F\u65F6 = 60 * 60 * 1000\u6BEB\u79D2\n        const transport = new StdioServerTransport();\n        await server.connect(transport);\n        console.error('\u2705 Grafana\u67E5\u8BE2\u5206\u6790MCP\u670D\u52A1\u5668\u5DF2\u542F\u52A8');\n        console.error(`\uD83D\uDCCA \u670D\u52A1\u5668\u4FE1\u606F: ${SERVER_INFO.name} v${SERVER_INFO.version}`);\n        console.error(`\uD83D\uDD27 \u914D\u7F6E\u72B6\u6001: ${Object.keys(config.queries || {}).length} \u4E2A\u67E5\u8BE2`);\n        console.error(`\uD83D\uDDD1\uFE0F \u6570\u636E\u6E05\u7406: ${dataExpiryHours}\u5C0F\u65F6\u540E\u81EA\u52A8\u6E05\u7406\uFF0C\u6BCF\u5C0F\u65F6\u68C0\u67E5\u4E00\u6B21`);\n    }\n    catch (error) {\n        console.error('\u274C \u670D\u52A1\u5668\u542F\u52A8\u5931\u8D25:', error);\n        process.exit(1);\n    }\n}\nmain().catch((error) => {\n    console.error('\u274C \u672A\u5904\u7406\u7684\u9519\u8BEF:', error);\n    process.exit(1);\n});\n"],
  "mappings": "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",
  "names": ["McpServer", "StdioServerTransport", "z", "fs", "path", "fileURLToPath", "executeQuery", "extractData", "checkHealth", "buildAnalysisGuidance", "generateDataOverview", "generateRequestId", "storeRequestMetadata", "storeResponseData", "getResponseData", "storeAnalysis", "getAnalysis", "listAllRequests", "listRequestsBySession", "getRequestStats", "cleanupExpiredData", "createSession", "getSessionInfo", "listSessions", "deleteSession", "loadConfig", "__filename", "__dirname", "packageJsonPath", "packageJson", "SERVER_INFO", "config", "createResponse", "data", "isError", "createErrorResponse", "error", "errorMessage", "validateQueryConfig", "queryName", "queries", "getQueries", "buildResourceLinks", "storageResult", "requestId", "executeAndStoreQuery", "queryConfig", "metadata", "result", "executeGrafanaQuery", "resourceLinks", "request", "queryResponse", "server", "createResourceHandler", "dataGetter", "uri", "parts", "dataType", "sessionId", "timeout", "expectedStatus", "healthStatus", "healthUrl", "includeConfig", "prompt", "dataOverview", "analysisGuidance", "description", "responseText", "queryNames", "allResults", "requestIds", "totalSize", "aggregateOverview", "allResourceLinks", "aggregateGuidance", "summary", "details", "action", "sessions", "newSessionId", "sessionInfo", "limit", "requests", "limitedRequests", "requestsWithStats", "req", "main", "dataExpiryHours", "initialCleanup", "deletedCount", "transport"]
}
